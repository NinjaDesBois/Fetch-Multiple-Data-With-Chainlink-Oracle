type = "directrequest"
schemaVersion = 1
name = "Get Votes 0.05LINK"
maxTaskDuration = "0s"
contractAddress = "0xd23cB7C9bDa53734ef4595F7a23398a85443246E"
externalJobID = "8ebf12e2-380f-4a78-afe3-f74eac1d3f97"
minContractPaymentLinkJuels = 50000000000000000
minIncomingConfirmations = 0
observationSource = """
    decode_log   [type="ethabidecodelog"
                  abi="OracleRequest(bytes32 indexed specId, address requester, bytes32 requestId, uint256 payment, address callbackAddr, bytes4 callbackFunctionId, uint256 cancelExpiration, uint256 dataVersion, bytes data)"
                  data="$(jobRun.logData)"
                  topics="$(jobRun.logTopics)"]
    decode_cbor     [type="cborparse" data="$(decode_log.data)"]
    fetch           [type="http" method=GET url="$(decode_cbor.get)"]
    parseYay        [type="jsonparse" path="data,proposal,scores,0" data="$(fetch)"]
    parseNay        [type="jsonparse" path="data,proposal,scores,1" data="$(fetch)"]
    parseAbstension [type="jsonparse" path="data,proposal,scores,2" data="$(fetch)"]
    encode_data     [type="ethabiencode" abi="(bytes32 requestId, uint256 yays, uint256 nays, uint256 abstensions)" data="{ \\"requestId\\": $(decode_log.requestId), \\"yays\\": $(parseYay), \\"nays\\": $(parseNay), \\"abstensions\\": $(parseAbstension)}"]
    encode_tx       [type="ethabiencode"
                      abi="fulfillOracleRequest2(bytes32 requestId, uint256 payment, address callbackAddress, bytes4 callbackFunctionId, uint256 expiration, bytes calldata data)"
                      data="{\\"requestId\\": $(decode_log.requestId), \\"payment\\": $(decode_log.payment), \\"callbackAddress\\": $(decode_log.callbackAddr), \\"callbackFunctionId\\": $(decode_log.callbackFunctionId), \\"expiration\\": $(decode_log.cancelExpiration), \\"data\\": $(encode_data)}"
                    ]
    submit_tx    [type="ethtx" to="0xd23cB7C9bDa53734ef4595F7a23398a85443246E" data="$(encode_tx)"]
    decode_log -> decode_cbor -> fetch -> parseYay -> parseNay -> parseAbstension -> encode_data -> encode_tx -> submit_tx
"""